Recruiting_Category__c,
Ref__c,
Primary_State_Code__c,
Lead_Segment_College_Board__c, Lead_Segment_NRCCUA__c
FROM Contact
WHERE DAY_ONLY(CreatedDate) > 2020-02-25
AND DAY_ONLY(CreatedDate) < 2020-03-13
AND TargetX_SRMb__Status__c != 'Lead'
AND (Lead_Segment_College_Board__c != ' '
OR 	Lead_Segment_NRCCUA__c  != ' ')
AND TargetX_SRMb__Anticipated_Start_Year__c != 2020")
queried_records <- sf_query(my_soql)
queried_records
unique(queried_records$TargetX_SRMb__Anticipated_Start_Year__c)
queried_records_JR <- read.csv("C:/Users/christine.iyer/Box/GeneralPurposeSearch/SF_Requests/FJanJR_PH.csv", header = T, stringsAsFactors = F)
queried_records_JR <- queried_records %>%
mutate(Geo = ifelse(Primary_State_Code__c == "ME", "In-State", "Out-of-State")) %>% filter(TargetX_SRMb__Anticipated_Start_Year__c == 2021)
queried_records_JR
queried_records_JR <- read.csv("C:/Users/christine.iyer/Box/GeneralPurposeSearch/SF_Requests/FJanJR_PH.csv", header = T, stringsAsFactors = F)
queried_records_JR <- queried_records %>%
mutate(Geo = ifelse(Primary_State_Code__c == "ME", "In-State", "Out-of-State")) %>% filter(TargetX_SRMb__Anticipated_Start_Year__c == 2021)
LeadsUploaded_JR <- read.csv("C:/Users/christine.iyer/Box/Search/FY20_Search/FY20_Combined_Search_Feb_March/FY20_Feb_Search_Upload_DeDuped.csv", header = T, stringsAsFactors = F)
trythis_JR <- merge(LeadsUploaded_JR, queried_records_JR, by = "Email" )
trythis_JR <- trythis_JR %>% mutate(DateCollected = Sys.Date(),
Vendor = ifelse(Lead.Segment.NRCCUA == "", "CB",
ifelse(Lead.Segment.College.Board == "", "NRCCUA", "Both")))
LeadsUploaded_JR <- LeadsUploaded_JR %>%
mutate(Geo = ifelse(Primary.State.Province == "Maine", "In-State", "Out-of-State"),
Vendor = ifelse(Lead.Segment.NRCCUA == "", "CB",
ifelse(Lead.Segment.College.Board == "", "NRCCUA", "Both"))) %>%
group_by(Geo, Vendor) %>%
summarise(Leads = n())
trythisGroup_JR <- trythis_JR %>% group_by(Geo, Vendor, TargetX_SRMb__Status__c) %>% summarise(n = n()) %>% spread(TargetX_SRMb__Status__c,n)
trythisGroup_JR$Applicant[is.na(trythisGroup_JR$Applicant)] <- 0
trythisGroup_JR <- trythisGroup_JR %>% mutate(Inquiry = sum(Applicant) + sum(Inquiry)) %>% select(Geo, Vendor, Inquiry, Applicant)
trythisGroup_JR <- trythisGroup_JR[c(1:6),]
JRConversion_JR <- left_join(LeadsUploaded_JR,trythisGroup_JR %>% group_by(Geo, Vendor) %>% summarise(Inquiries = sum(Inquiry), Applicants = sum(Applicant)))
JRConversion_JR$Inquiries[is.na(JRConversion_JR$Inquiries)] <- 0
JRConversion_JR$Applicants[is.na(JRConversion_JR$Applicants)] <- 0
kable(JRConversion_JR %>% mutate(Inquiry_Yield =
paste0(round(Inquiries/Leads * 100,2), "%"),
App_Yield =
paste0(round(Applicants/Leads * 100,2), "%")))
queried_records_PH <- read.csv("C:/Users/christine.iyer/Box/GeneralPurposeSearch/SF_Requests/FJanJR_PH.csv", header = T, stringsAsFactors = F)
queried_records_PH <- queried_records_PH %>%
mutate(Geo = ifelse(Primary_State_Code__c == "ME", "In-State", "Out-of-State")) %>% filter(TargetX_SRMb__Anticipated_Start_Year__c > 2021)
# LeadsUploaded_JR <- read.csv("C:/Users/christine.iyer/Box/Search/FY20_Search/FY20_Combined_Search_Feb_March/FY20_Feb_Search_Upload_DeDuped.csv", header = T, stringsAsFactors = F)
trythis_PH <- merge(queried_records_PH, LeadsUploaded_JR, by = "Email" )
trythis_PH <- merge(queried_records_PH, LeadsUploaded_JR, by = "Email" )
queried_records_PH
queried_records_PH <- read.csv("C:/Users/christine.iyer/Box/GeneralPurposeSearch/SF_Requests/FJanJR_PH.csv", header = T, stringsAsFactors = F)
queried_records_PH <- queried_records_PH %>%
mutate(Geo = ifelse(Primary_State_Code__c == "ME", "In-State", "Out-of-State")) %>% filter(TargetX_SRMb__Anticipated_Start_Year__c > 2021)
queried_records_PH
queried_records_PH <- read.csv("C:/Users/christine.iyer/Box/GeneralPurposeSearch/SF_Requests/FJanJR_PH.csv", header = T, stringsAsFactors = F)
queried_records_PH <- queried_records_PH %>%
mutate(Geo = ifelse(Primary_State_Code__c == "ME", "In-State", "Out-of-State")) %>% filter(TargetX_SRMb__Anticipated_Start_Year__c == 2022)
queried_records_PH
queried_records
unique(queried_records$TargetX_SRMb__Anticipated_Start_Year__c)
queried_records %>% group_by(TargetX_SRMb__Anticipated_Start_Year__c) %>% summarise(n = n())
queried_records_PH <- read.csv("C:/Users/christine.iyer/Box/GeneralPurposeSearch/SF_Requests/FJanJR_PH.csv", header = T, stringsAsFactors = F)
queried_records_PH <- queried_records_PH %>%
mutate(Geo = ifelse(Primary_State_Code__c == "ME", "In-State", "Out-of-State")) %>% filter(TargetX_SRMb__Anticipated_Start_Year__c == 2022)
queried_records_PH
queried_records_PH <- read.csv("C:/Users/christine.iyer/Box/GeneralPurposeSearch/SF_Requests/FJanJR_PH.csv", header = T, stringsAsFactors = F)
queried_records_PH
unique(queried_records_PH$TargetX_SRMb__Anticipated_Start_Year__c)
queried_records %>% group_by(TargetX_SRMb__Anticipated_Start_Year__c) %>% summarise(n = n())
queried_records_PH <- read.csv("C:/Users/christine.iyer/Box/GeneralPurposeSearch/SF_Requests/FJanJR_PH.csv", header = T, stringsAsFactors = F)
unique(queried_records_PH$TargetX_SRMb__Anticipated_Start_Year__c)
queried_records_PH <- read.csv("C:/Users/christine.iyer/Box/GeneralPurposeSearch/SF_Requests/FJanJR_PH.csv", header = T, stringsAsFactors = F)
queried_records_PH
library(salesforcer)
library(knitr)
library(RForcecom)
username <- "christine.iyer@maine.edu"
password <- "1Edithandoliver"
securityToken <- "iFhpXgaXnuP3L5PQr69Zw2yOy"
instanceURL <- "https://login.salesforce.com/"
apiVersion <- "44.0"
#auth <- sf_auth(username = username, password = password, security_token = securityToken,
#login_url = getOption("https://login.salesforce.com/"))
session <- sf_auth(username, password, securityToken, instanceURL, apiVersion)
username <- "christine.iyer@maine.edu"
password <- "1EdithandoliveriFhpXgaXnuP3L5PQr69Zw2yOy"
#securityToken <- ""
instanceURL <- "https://na24.salesforce.com/"
apiVersion <- "44.0"
session <- rforcecom.login(username, password, instanceURL,apiVersion  )
my_soql <- sprintf("SELECT Id,
CreatedDate,
Email,
FirstName,
LastName,
TargetX_SRMb__Status__c, TargetX_SRMb__Student_Type__c,
TargetX_SRMb__Anticipated_Start_Term__c,
TargetX_SRMb__Anticipated_Start_Term_Year__c,
TargetX_SRMb__Anticipated_Start_Year__c,
App_Application_Date__c,
TargetX_SRMb__Gender__c,
TargetX_SRMb__Last_Data_Input_Source__c,                                                                Initial_Source_Date__c,
Initial_Referral_Source__c,
Recruiting_Category__c,
Ref__c,
Primary_State_Code__c,
Lead_Segment_College_Board__c, Lead_Segment_NRCCUA__c
FROM Contact
WHERE DAY_ONLY(CreatedDate) > 2020-02-25
AND DAY_ONLY(CreatedDate) < 2020-03-13
AND TargetX_SRMb__Status__c != 'Lead'
AND (Lead_Segment_College_Board__c != ' '
OR 	Lead_Segment_NRCCUA__c  != ' ')
AND TargetX_SRMb__Anticipated_Start_Year__c != 2020")
queried_records <- sf_query(my_soql)
queried_records %>% group_by(TargetX_SRMb__Anticipated_Start_Year__c) %>% summarise(n = n())
queriedRecords_JUNIOR <- queried_records %>% filter(TargetX_SRMb__Anticipated_Start_Year__c == 2021)
queriedRecords_SOPHOMORE <- queried_records %>% filter(TargetX_SRMb__Anticipated_Start_Year__c > 2021)
queriedRecords_JUNIOR
queriedRecords_JUNIOR %>% group_by(TargetX_SRMb__Anticipated_Start_Year__c) %>% summarise(n = n())
queriedRecords_SOPHOMORE <- queried_records %>% filter(TargetX_SRMb__Anticipated_Start_Year__c > 2021)
queriedRecords_SOPHOMORE %>% group_by(TargetX_SRMb__Anticipated_Start_Year__c) %>% summarise(n = n())
library(salesforcer)
library(knitr)
library(RForcecom)
username <- "christine.iyer@maine.edu"
password <- "1Edithandoliver"
securityToken <- "iFhpXgaXnuP3L5PQr69Zw2yOy"
instanceURL <- "https://login.salesforce.com/"
apiVersion <- "44.0"
#auth <- sf_auth(username = username, password = password, security_token = securityToken,
#login_url = getOption("https://login.salesforce.com/"))
session <- sf_auth(username, password, securityToken, instanceURL, apiVersion)
username <- "christine.iyer@maine.edu"
password <- "1EdithandoliveriFhpXgaXnuP3L5PQr69Zw2yOy"
#securityToken <- ""
instanceURL <- "https://na24.salesforce.com/"
apiVersion <- "44.0"
session <- rforcecom.login(username, password, instanceURL,apiVersion  )
my_soql <- sprintf("SELECT Id,
CreatedDate,
Email,
FirstName,
LastName,
TargetX_SRMb__Status__c, TargetX_SRMb__Student_Type__c,
TargetX_SRMb__Anticipated_Start_Term__c,
TargetX_SRMb__Anticipated_Start_Term_Year__c,
TargetX_SRMb__Anticipated_Start_Year__c,
App_Application_Date__c,
TargetX_SRMb__Gender__c,
TargetX_SRMb__Last_Data_Input_Source__c,                                                                Initial_Source_Date__c,
Initial_Referral_Source__c,
Recruiting_Category__c,
Ref__c,
Primary_State_Code__c,
Lead_Segment_College_Board__c, Lead_Segment_NRCCUA__c
FROM Contact
WHERE DAY_ONLY(CreatedDate) > 2020-02-25
AND DAY_ONLY(CreatedDate) < 2020-03-13
AND TargetX_SRMb__Status__c != 'Lead'
AND (Lead_Segment_College_Board__c != ' '
OR 	Lead_Segment_NRCCUA__c  != ' ')
AND TargetX_SRMb__Anticipated_Start_Year__c != 2020")
queried_records <- sf_query(my_soql)
queriedRecords_JUNIOR <- queried_records %>% filter(TargetX_SRMb__Anticipated_Start_Year__c == 2021)
queriedRecords_SOPHOMORE <- queried_records %>% filter(TargetX_SRMb__Anticipated_Start_Year__c > 2021)
queriedRecords_SOPHOMORE %>% group_by(TargetX_SRMb__Anticipated_Start_Year__c) %>% summarise(n = n())
write.csv(queriedRecords_JUNIOR, "C:/Users/christine.iyer/Box/GeneralPurposeSearch/SF_Requests/queriedRecords_JUNIOR.csv", row.names = F)
write.csv(queriedRecords_SOPHOMORE, "C:/Users/christine.iyer/Box/GeneralPurposeSearch/SF_Requests/queriedRecords_SOPHOMORE", row.names = F)
library(salesforcer)
library(knitr)
library(RForcecom)
username <- "christine.iyer@maine.edu"
password <- "1Edithandoliver"
securityToken <- "iFhpXgaXnuP3L5PQr69Zw2yOy"
instanceURL <- "https://login.salesforce.com/"
apiVersion <- "44.0"
#auth <- sf_auth(username = username, password = password, security_token = securityToken,
#login_url = getOption("https://login.salesforce.com/"))
session <- sf_auth(username, password, securityToken, instanceURL, apiVersion)
username <- "christine.iyer@maine.edu"
password <- "1EdithandoliveriFhpXgaXnuP3L5PQr69Zw2yOy"
#securityToken <- ""
instanceURL <- "https://na24.salesforce.com/"
apiVersion <- "44.0"
session <- rforcecom.login(username, password, instanceURL,apiVersion  )
my_soql <- sprintf("SELECT Id,
CreatedDate,
Email,
FirstName,
LastName,
TargetX_SRMb__Status__c, TargetX_SRMb__Student_Type__c,
TargetX_SRMb__Anticipated_Start_Term__c,
TargetX_SRMb__Anticipated_Start_Term_Year__c,
TargetX_SRMb__Anticipated_Start_Year__c,
App_Application_Date__c,
TargetX_SRMb__Gender__c,
TargetX_SRMb__Last_Data_Input_Source__c,                                                                Initial_Source_Date__c,
Initial_Referral_Source__c,
Recruiting_Category__c,
Ref__c,
Primary_State_Code__c,
Lead_Segment_College_Board__c, Lead_Segment_NRCCUA__c
FROM Contact
WHERE DAY_ONLY(CreatedDate) > 2020-02-25
AND DAY_ONLY(CreatedDate) < 2020-03-13
AND TargetX_SRMb__Status__c != 'Lead'
AND (Lead_Segment_College_Board__c != ' '
OR 	Lead_Segment_NRCCUA__c  != ' ')
AND TargetX_SRMb__Anticipated_Start_Year__c != 2020")
queried_records <- sf_query(my_soql)
queriedRecords_JUNIOR <- queried_records %>% filter(TargetX_SRMb__Anticipated_Start_Year__c == 2021)
queriedRecords_SOPHOMORE <- queried_records %>% filter(TargetX_SRMb__Anticipated_Start_Year__c > 2021)
queriedRecords_SOPHOMORE %>% group_by(TargetX_SRMb__Anticipated_Start_Year__c) %>% summarise(n = n())
write.csv(queriedRecords_JUNIOR, "C:/Users/christine.iyer/Box/GeneralPurposeSearch/SF_Requests/queriedRecords_JUNIOR.csv", row.names = F)
write.csv(queriedRecords_SOPHOMORE, "C:/Users/christine.iyer/Box/GeneralPurposeSearch/SF_Requests/queriedRecords_SOPHOMORE", row.names = F)
queried_records_PH <- read.csv("C:/Users/christine.iyer/Box/GeneralPurposeSearch/SF_Requests/queriedRecords_SOPHOMORE", header = T, stringsAsFactors = F)
unique(queried_records_PH$TargetX_SRMb__Anticipated_Start_Year__c)
queried_records_PH <- read.csv("C:/Users/christine.iyer/Box/GeneralPurposeSearch/SF_Requests/queriedRecords_SOPHOMORE", header = T, stringsAsFactors = F)
unique(queried_records_PH$TargetX_SRMb__Anticipated_Start_Year__c)
queried_records_PH <- queried_records_PH %>%
mutate(Geo = ifelse(Primary_State_Code__c == "ME", "In-State", "Out-of-State"))
# LeadsUploaded_JR <- read.csv("C:/Users/christine.iyer/Box/Search/FY20_Search/FY20_Combined_Search_Feb_March/FY20_Feb_Search_Upload_DeDuped.csv", header = T, stringsAsFactors = F)
trythis_PH <- merge(queried_records_PH, LeadsUploaded_JR, by = "Email" )
queried_records_PH
LeadsUploaded_JR
<- read.csv("C:/Users/christine.iyer/Box/Search/FY20_Search/FY20_Combined_Search_Feb_March/FY20_Feb_Search_Upload_DeDuped.csv", header = T, stringsAsFactors = F)
queried_records_PH <- read.csv("C:/Users/christine.iyer/Box/GeneralPurposeSearch/SF_Requests/queriedRecords_SOPHOMORE", header = T, stringsAsFactors = F)
unique(queried_records_PH$TargetX_SRMb__Anticipated_Start_Year__c)
queried_records_PH <- queried_records_PH %>%
mutate(Geo = ifelse(Primary_State_Code__c == "ME", "In-State", "Out-of-State"))
LeadsUploaded_JR <- read.csv("C:/Users/christine.iyer/Box/Search/FY20_Search/FY20_Combined_Search_Feb_March/FY20_Feb_Search_Upload_DeDuped.csv", header = T, stringsAsFactors = F)
trythis_PH <- merge(queried_records_PH, LeadsUploaded_JR, by = "Email" )
trythis_PH <- trythis_PH %>% mutate(DateCollected = Sys.Date(),
Vendor = ifelse(Lead.Segment.NRCCUA == "", "CB",
ifelse(Lead.Segment.College.Board == "", "NRCCUA", "Both")))
LeadsUploaded_JR <- LeadsUploaded_JR %>%
mutate(Geo = ifelse(Primary.State.Province == "Maine", "In-State", "Out-of-State"),
Vendor = ifelse(Lead.Segment.NRCCUA == "", "CB",
ifelse(Lead.Segment.College.Board == "", "NRCCUA", "Both"))) %>%
group_by(Geo, Vendor) %>%
summarise(Leads = n())
trythisGroup_PH <- trythis_PH %>% group_by(Geo, Vendor, TargetX_SRMb__Status__c) %>% summarise(n = n()) %>% spread(TargetX_SRMb__Status__c,n)
trythisGroup_PH$Applicant[is.na(trythisGroup_PH$Applicant)] <- 0
queried_records_PH <- read.csv("C:/Users/christine.iyer/Box/GeneralPurposeSearch/SF_Requests/queriedRecords_SOPHOMORE", header = T, stringsAsFactors = F)
queried_records_PH <- queried_records_PH %>%
mutate(Geo = ifelse(Primary_State_Code__c == "ME", "In-State", "Out-of-State"))
LeadsUploaded_JR <- read.csv("C:/Users/christine.iyer/Box/Search/FY20_Search/FY20_Combined_Search_Feb_March/FY20_Feb_Search_Upload_DeDuped.csv", header = T, stringsAsFactors = F)
trythis_PH <- merge(queried_records_PH, LeadsUploaded_JR, by = "Email" )
trythis_PH <- trythis_PH %>% mutate(DateCollected = Sys.Date(),
Vendor = ifelse(Lead.Segment.NRCCUA == "", "CB",
ifelse(Lead.Segment.College.Board == "", "NRCCUA", "Both")))
LeadsUploaded_JR <- LeadsUploaded_JR %>%
mutate(Geo = ifelse(Primary.State.Province == "Maine", "In-State", "Out-of-State"),
Vendor = ifelse(Lead.Segment.NRCCUA == "", "CB",
ifelse(Lead.Segment.College.Board == "", "NRCCUA", "Both"))) %>%
group_by(Geo, Vendor) %>%
summarise(Leads = n())
trythisGroup_PH <- trythis_PH %>% group_by(Geo, Vendor, TargetX_SRMb__Status__c) %>% summarise(n = n()) %>% spread(TargetX_SRMb__Status__c,n)
trythisGroup_PH
trythisGroup_PH <- trythis_PH %>% group_by(Geo, Vendor, TargetX_SRMb__Status__c) %>% summarise(n = n())
trythisGroup_PH
queried_records_PH <- read.csv("C:/Users/christine.iyer/Box/GeneralPurposeSearch/SF_Requests/queriedRecords_SOPHOMORE", header = T, stringsAsFactors = F)
queried_records_PH <- queried_records_PH %>%
mutate(Geo = ifelse(Primary_State_Code__c == "ME", "In-State", "Out-of-State"))
LeadsUploaded_JR <- read.csv("C:/Users/christine.iyer/Box/Search/FY20_Search/FY20_Combined_Search_Feb_March/FY20_Feb_Search_Upload_DeDuped.csv", header = T, stringsAsFactors = F)
trythis_PH <- merge(queried_records_PH, LeadsUploaded_JR, by = "Email" )
trythis_PH <- trythis_PH %>% mutate(DateCollected = Sys.Date(),
Vendor = ifelse(Lead.Segment.NRCCUA == "", "CB",
ifelse(Lead.Segment.College.Board == "", "NRCCUA", "Both")))
LeadsUploaded_JR <- LeadsUploaded_JR %>%
mutate(Geo = ifelse(Primary.State.Province == "Maine", "In-State", "Out-of-State"),
Vendor = ifelse(Lead.Segment.NRCCUA == "", "CB",
ifelse(Lead.Segment.College.Board == "", "NRCCUA", "Both"))) %>%
group_by(Geo, Vendor) %>%
summarise(Leads = n())
trythisGroup_PH <- trythis_PH %>% group_by(Geo, Vendor, TargetX_SRMb__Status__c) %>% summarise(n = n())
JRConversion_PH <- left_join(LeadsUploaded_JR,trythisGroup_PH %>% group_by(Geo, Vendor) %>% summarise(Inquiries = sum(Inquiry)))
JRConversion_PH <- left_join(LeadsUploaded_JR,trythisGroup_PH %>% group_by(Geo, Vendor) %>% summarise(Inquiries = sum(n)))
JRConversion_PH
LeadsUploaded_JR
LeadsUploaded_JR <- read.csv("C:/Users/christine.iyer/Box/Search/FY20_Search/FY20_Combined_Search_Feb_March/FY20_Feb_Search_Upload_DeDuped.csv", header = T, stringsAsFactors = F)
LeadsUploaded_JR <- read.csv("C:/Users/christine.iyer/Box/Search/FY20_Search/FY20_Combined_Search_Feb_March/FY20_Feb_Search_Upload_DeDuped.csv", header = T, stringsAsFactors = F)
LeadsUploaded_JR
LeadsUploaded_PH <- read.csv("C:/Users/christine.iyer/Box/Search/FY20_Search/FY20_Combined_Search_Feb_March/FY20_Feb_Search_Upload_DeDuped.csv", header = T, stringsAsFactors = F)
queried_records_PH <- read.csv("C:/Users/christine.iyer/Box/GeneralPurposeSearch/SF_Requests/queriedRecords_SOPHOMORE", header = T, stringsAsFactors = F)
queried_records_PH <- queried_records_PH %>%
mutate(Geo = ifelse(Primary_State_Code__c == "ME", "In-State", "Out-of-State"))
LeadsUploaded_PH <- read.csv("C:/Users/christine.iyer/Box/Search/FY20_Search/FY20_Combined_Search_Feb_March/FY20_Feb_Search_Upload_DeDuped.csv", header = T, stringsAsFactors = F)
LeadsUploaded_PH <- LeadsUploaded_PH %>% filter(Anticipated.Start.Year >2021)
trythis_PH <- merge(queried_records_PH, LeadsUploaded_PH, by = "Email" )
trythis_PH <- trythis_PH %>% mutate(DateCollected = Sys.Date(),
Vendor = ifelse(Lead.Segment.NRCCUA == "", "CB",
ifelse(Lead.Segment.College.Board == "", "NRCCUA", "Both")))
LeadsUploaded_PH <- LeadsUploaded_PH %>%
mutate(Geo = ifelse(Primary.State.Province == "Maine", "In-State", "Out-of-State"),
Vendor = ifelse(Lead.Segment.NRCCUA == "", "CB",
ifelse(Lead.Segment.College.Board == "", "NRCCUA", "Both"))) %>%
group_by(Geo, Vendor) %>%
summarise(Leads = n())
trythisGroup_PH <- trythis_PH %>% group_by(Geo, Vendor, TargetX_SRMb__Status__c) %>% summarise(n = n())
JRConversion_PH <- left_join(LeadsUploaded_PH,trythisGroup_PH %>% group_by(Geo, Vendor) %>% summarise(Inquiries = sum(n)))
JRConversion_JR$Inquiries[is.na(JRConversion_JR$Inquiries)] <- 0
JRConversion_JR$Applicants[is.na(JRConversion_JR$Applicants)] <- 0
kable(JRConversion_JR %>% mutate(Inquiry_Yield =
paste0(round(Inquiries/Leads * 100,2), "%"),
App_Yield =
paste0(round(Applicants/Leads * 100,2), "%")))
queried_records_PH <- read.csv("C:/Users/christine.iyer/Box/GeneralPurposeSearch/SF_Requests/queriedRecords_SOPHOMORE", header = T, stringsAsFactors = F)
queried_records_PH <- queried_records_PH %>%
mutate(Geo = ifelse(Primary_State_Code__c == "ME", "In-State", "Out-of-State"))
LeadsUploaded_PH <- read.csv("C:/Users/christine.iyer/Box/Search/FY20_Search/FY20_Combined_Search_Feb_March/FY20_Feb_Search_Upload_DeDuped.csv", header = T, stringsAsFactors = F)
LeadsUploaded_PH <- LeadsUploaded_PH %>% filter(Anticipated.Start.Year >2021)
trythis_PH <- merge(queried_records_PH, LeadsUploaded_PH, by = "Email" )
trythis_PH <- trythis_PH %>% mutate(DateCollected = Sys.Date(),
Vendor = ifelse(Lead.Segment.NRCCUA == "", "CB",
ifelse(Lead.Segment.College.Board == "", "NRCCUA", "Both")))
LeadsUploaded_PH <- LeadsUploaded_PH %>%
mutate(Geo = ifelse(Primary.State.Province == "Maine", "In-State", "Out-of-State"),
Vendor = ifelse(Lead.Segment.NRCCUA == "", "CB",
ifelse(Lead.Segment.College.Board == "", "NRCCUA", "Both"))) %>%
group_by(Geo, Vendor) %>%
summarise(Leads = n())
trythisGroup_PH <- trythis_PH %>% group_by(Geo, Vendor, TargetX_SRMb__Status__c) %>% summarise(n = n())
Conversion_PH <- left_join(LeadsUploaded_PH,trythisGroup_PH %>% group_by(Geo, Vendor) %>% summarise(Inquiries = sum(n)))
# JRConversion_JR$Inquiries[is.na(JRConversion_JR$Inquiries)] <- 0
# JRConversion_JR$Applicants[is.na(JRConversion_JR$Applicants)] <- 0
kable(Conversion_PH %>% mutate(Inquiry_Yield =
paste0(round(Inquiries/Leads * 100,2), "%"),
App_Yield =
paste0(round(Applicants/Leads * 100,2), "%")))
queried_records_PH <- read.csv("C:/Users/christine.iyer/Box/GeneralPurposeSearch/SF_Requests/queriedRecords_SOPHOMORE", header = T, stringsAsFactors = F)
queried_records_PH <- queried_records_PH %>%
mutate(Geo = ifelse(Primary_State_Code__c == "ME", "In-State", "Out-of-State"))
LeadsUploaded_PH <- read.csv("C:/Users/christine.iyer/Box/Search/FY20_Search/FY20_Combined_Search_Feb_March/FY20_Feb_Search_Upload_DeDuped.csv", header = T, stringsAsFactors = F)
LeadsUploaded_PH <- LeadsUploaded_PH %>% filter(Anticipated.Start.Year >2021)
trythis_PH <- merge(queried_records_PH, LeadsUploaded_PH, by = "Email" )
trythis_PH <- trythis_PH %>% mutate(DateCollected = Sys.Date(),
Vendor = ifelse(Lead.Segment.NRCCUA == "", "CB",
ifelse(Lead.Segment.College.Board == "", "NRCCUA", "Both")))
LeadsUploaded_PH <- LeadsUploaded_PH %>%
mutate(Geo = ifelse(Primary.State.Province == "Maine", "In-State", "Out-of-State"),
Vendor = ifelse(Lead.Segment.NRCCUA == "", "CB",
ifelse(Lead.Segment.College.Board == "", "NRCCUA", "Both"))) %>%
group_by(Geo, Vendor) %>%
summarise(Leads = n())
trythisGroup_PH <- trythis_PH %>% group_by(Geo, Vendor, TargetX_SRMb__Status__c) %>% summarise(n = n())
Conversion_PH <- left_join(LeadsUploaded_PH,trythisGroup_PH %>% group_by(Geo, Vendor) %>% summarise(Inquiries = sum(n)))
Conversion_PH
# JRConversion_JR$Inquiries[is.na(JRConversion_JR$Inquiries)] <- 0
# JRConversion_JR$Applicants[is.na(JRConversion_JR$Applicants)] <- 0
kable(Conversion_PH %>% mutate(Inquiry_Yield =
paste0(round(Inquiries/Leads * 100,2), "%"),
))
library(salesforcer)
library(knitr)
library(RForcecom)
username <- "christine.iyer@maine.edu"
password <- "1Edithandoliver"
securityToken <- "iFhpXgaXnuP3L5PQr69Zw2yOy"
instanceURL <- "https://login.salesforce.com/"
apiVersion <- "44.0"
#auth <- sf_auth(username = username, password = password, security_token = securityToken,
#login_url = getOption("https://login.salesforce.com/"))
session <- sf_auth(username, password, securityToken, instanceURL, apiVersion)
username <- "christine.iyer@maine.edu"
password <- "1EdithandoliveriFhpXgaXnuP3L5PQr69Zw2yOy"
#securityToken <- ""
instanceURL <- "https://na24.salesforce.com/"
apiVersion <- "44.0"
session <- rforcecom.login(username, password, instanceURL,apiVersion  )
my_soql <- sprintf("SELECT Id,
CreatedDate,
Email,
FirstName,
LastName,
TargetX_SRMb__Status__c, TargetX_SRMb__Student_Type__c,
TargetX_SRMb__Anticipated_Start_Term__c,
TargetX_SRMb__Anticipated_Start_Term_Year__c,
TargetX_SRMb__Anticipated_Start_Year__c,
App_Application_Date__c,
TargetX_SRMb__Gender__c,
TargetX_SRMb__Last_Data_Input_Source__c,                                                                Initial_Source_Date__c,
Initial_Referral_Source__c,
Recruiting_Category__c,
Ref__c,
Primary_State_Code__c,
Lead_Segment_College_Board__c, Lead_Segment_NRCCUA__c
FROM Contact
WHERE DAY_ONLY(CreatedDate) > 2020-04-21
AND DAY_ONLY(CreatedDate) < 2020-05-05
AND TargetX_SRMb__Status__c != 'Lead'
AND (Lead_Segment_College_Board__c != ' '
OR 	Lead_Segment_NRCCUA__c  != ' '))
queried_records_April <- sf_query(my_soql)
queriedRecords_JUNIOR <- queried_records_April %>% filter(TargetX_SRMb__Anticipated_Start_Year__c == 2021)
queriedRecords_SOPHOMORE <- queried_records_April %>% filter(TargetX_SRMb__Anticipated_Start_Year__c > 2021)
library(salesforcer)
library(knitr)
library(RForcecom)
username <- "christine.iyer@maine.edu"
password <- "1Edithandoliver"
securityToken <- "iFhpXgaXnuP3L5PQr69Zw2yOy"
instanceURL <- "https://login.salesforce.com/"
apiVersion <- "44.0"
#auth <- sf_auth(username = username, password = password, security_token = securityToken,
#login_url = getOption("https://login.salesforce.com/"))
session <- sf_auth(username, password, securityToken, instanceURL, apiVersion)
username <- "christine.iyer@maine.edu"
password <- "1EdithandoliveriFhpXgaXnuP3L5PQr69Zw2yOy"
#securityToken <- ""
instanceURL <- "https://na24.salesforce.com/"
apiVersion <- "44.0"
session <- rforcecom.login(username, password, instanceURL,apiVersion  )
my_soql <- sprintf("SELECT Id,
CreatedDate,
Email,
FirstName,
LastName,
TargetX_SRMb__Status__c, TargetX_SRMb__Student_Type__c,
TargetX_SRMb__Anticipated_Start_Term__c,
TargetX_SRMb__Anticipated_Start_Term_Year__c,
TargetX_SRMb__Anticipated_Start_Year__c,
App_Application_Date__c,
TargetX_SRMb__Gender__c,
TargetX_SRMb__Last_Data_Input_Source__c,                                                                Initial_Source_Date__c,
Initial_Referral_Source__c,
Recruiting_Category__c,
Ref__c,
Primary_State_Code__c,
Lead_Segment_College_Board__c, Lead_Segment_NRCCUA__c
FROM Contact
WHERE DAY_ONLY(CreatedDate) > 2020-04-21
AND DAY_ONLY(CreatedDate) < 2020-05-05
AND TargetX_SRMb__Status__c != 'Lead'
AND (Lead_Segment_College_Board__c != ' '
OR 	Lead_Segment_NRCCUA__c  != ' '))
queried_records_April <- sf_query(my_soql)
queriedRecords_JUNIOR <- queried_records_April %>% filter(TargetX_SRMb__Anticipated_Start_Year__c == 2021)
queriedRecords_SOPHOMORE <- queried_records_April %>% filter(TargetX_SRMb__Anticipated_Start_Year__c > 2021)
library(salesforcer)
library(knitr)
library(RForcecom)
username <- "christine.iyer@maine.edu"
password <- "1Edithandoliver"
securityToken <- "iFhpXgaXnuP3L5PQr69Zw2yOy"
instanceURL <- "https://login.salesforce.com/"
apiVersion <- "44.0"
#auth <- sf_auth(username = username, password = password, security_token = securityToken,
#login_url = getOption("https://login.salesforce.com/"))
session <- sf_auth(username, password, securityToken, instanceURL, apiVersion)
username <- "christine.iyer@maine.edu"
password <- "1EdithandoliveriFhpXgaXnuP3L5PQr69Zw2yOy"
#securityToken <- ""
instanceURL <- "https://na24.salesforce.com/"
apiVersion <- "44.0"
session <- rforcecom.login(username, password, instanceURL,apiVersion  )
my_soql <- sprintf("SELECT Id,
CreatedDate,
Email,
FirstName,
LastName,
TargetX_SRMb__Status__c, TargetX_SRMb__Student_Type__c,
TargetX_SRMb__Anticipated_Start_Term__c,
TargetX_SRMb__Anticipated_Start_Term_Year__c,
TargetX_SRMb__Anticipated_Start_Year__c,
App_Application_Date__c,
TargetX_SRMb__Gender__c,
TargetX_SRMb__Last_Data_Input_Source__c,                                                                Initial_Source_Date__c,
Initial_Referral_Source__c,
Recruiting_Category__c,
Ref__c,
Primary_State_Code__c,
Lead_Segment_College_Board__c, Lead_Segment_NRCCUA__c
FROM Contact
WHERE DAY_ONLY(CreatedDate) > 2020-02-25
AND DAY_ONLY(CreatedDate) < 2020-03-13
AND TargetX_SRMb__Status__c != 'Lead'
AND (Lead_Segment_College_Board__c != ' '
OR 	Lead_Segment_NRCCUA__c  != ' ')
AND TargetX_SRMb__Anticipated_Start_Year__c != 2020")
queried_records <- sf_query(my_soql)
queriedRecords_JUNIOR <- queried_records %>% filter(TargetX_SRMb__Anticipated_Start_Year__c == 2021)
queriedRecords_SOPHOMORE <- queried_records %>% filter(TargetX_SRMb__Anticipated_Start_Year__c > 2021)
queriedRecords_SOPHOMORE %>% group_by(TargetX_SRMb__Anticipated_Start_Year__c) %>% summarise(n = n())
write.csv(queriedRecords_JUNIOR, "C:/Users/christine.iyer/Box/GeneralPurposeSearch/SF_Requests/queriedRecords_JUNIOR.csv", row.names = F)
write.csv(queriedRecords_SOPHOMORE, "C:/Users/christine.iyer/Box/GeneralPurposeSearch/SF_Requests/queriedRecords_SOPHOMORE.csv", row.names = F)
queried_records_PH <- read.csv("C:/Users/christine.iyer/Box/GeneralPurposeSearch/SF_Requests/queriedRecords_SOPHOMORE.csv", header = T, stringsAsFactors = F)
queried_records_PH <- queried_records_PH %>%
mutate(Geo = ifelse(Primary_State_Code__c == "ME", "In-State", "Out-of-State"))
LeadsUploaded_PH <- read.csv("C:/Users/christine.iyer/Box/Search/FY20_Search/FY20_Combined_Search_Feb_March/FY20_Feb_Search_Upload_DeDuped.csv", header = T, stringsAsFactors = F)
LeadsUploaded_PH <- read.csv("C:/Users/christine.iyer/Box/Search/FY20_Search/FY20_Combined_Search_Feb_March/FY20_Feb_Search_Upload_DeDuped.csv", header = T, stringsAsFactors = F)
LeadsUploaded_PH <- LeadsUploaded_PH %>% filter(Anticipated.Start.Year >2021)
LeadsUploaded_PH <- read.csv("C:/Users/christine.iyer/Box/Search/FY20_Search/FY20_Combined_Search_Feb_March/FY20_Feb_Search_Upload_DeDuped.csv", header = T, stringsAsFactors = F)
LeadsUploaded_PH <- LeadsUploaded_PH %>% filter(Anticipated.Start.Year >2021)
trythis_PH <- merge(queried_records_PH, LeadsUploaded_PH, by = "Email" )
trythis_PH <- trythis_PH %>% mutate(DateCollected = Sys.Date(),
Vendor = ifelse(Lead.Segment.NRCCUA == "", "CB",
ifelse(Lead.Segment.College.Board == "", "NRCCUA", "Both")))
LeadsUploaded_PH <- LeadsUploaded_PH %>%
mutate(Geo = ifelse(Primary.State.Province == "Maine", "In-State", "Out-of-State"),
Vendor = ifelse(Lead.Segment.NRCCUA == "", "CB",
ifelse(Lead.Segment.College.Board == "", "NRCCUA", "Both"))) %>%
group_by(Geo, Vendor) %>%
summarise(Leads = n())
trythisGroup_PH <- trythis_PH %>% group_by(Geo, Vendor, TargetX_SRMb__Status__c) %>% summarise(n = n())
Conversion_PH <- left_join(LeadsUploaded_PH,trythisGroup_PH %>% group_by(Geo, Vendor) %>% summarise(Inquiries = sum(n)))
# JRConversion_JR$Inquiries[is.na(JRConversion_JR$Inquiries)] <- 0
# JRConversion_JR$Applicants[is.na(JRConversion_JR$Applicants)] <- 0
kable(Conversion_PH %>% mutate(Inquiry_Yield =
paste0(round(Inquiries/Leads * 100,2), "%"),
))
